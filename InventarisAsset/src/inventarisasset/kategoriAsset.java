/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventarisasset;

import connectData.*;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;


/**
 *
 * @author User
 */
public class kategoriAsset extends javax.swing.JFrame {
    private koneksi obj;
    public DefaultTableModel master_asset_category;

    /**
     * Creates new form kategoriAsset
     */
    public kategoriAsset() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        obj = new koneksi();
        master_asset_category = new DefaultTableModel();
        tableKategori.setModel(master_asset_category);
        master_asset_category.addColumn("ID Kategori");
        master_asset_category.addColumn("Nama kategori");
        
        tampilDataKategori();
    }
    
     public void tampilDataKategori() {
    try {
            master_asset_category.setRowCount(0);

            String query = "SELECT * FROM master_asset_category";
            try (PreparedStatement preparedStatement = obj.konek.prepareStatement(query);
                 ResultSet data = preparedStatement.executeQuery()) {
                while (data.next()) {
                    Object[] line = new Object[2];
                    line[0] = data.getString("category_id");
                    line[1] = data.getString("category_name");
                    master_asset_category.addRow(line);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIDkat = new javax.swing.JTextField();
        txtNamaKat = new javax.swing.JTextField();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKategori = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID Kategori");

        jLabel2.setText("Nama Kategori");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        tableKategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        tableKategori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableKategoriMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableKategori);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(38, 38, 38)
                        .addComponent(txtIDkat, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(btnCetak)
                            .addComponent(btnEdit)
                            .addComponent(btnHapus)
                            .addComponent(btnSimpan))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNamaKat, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIDkat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNamaKat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnSimpan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCetak)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableKategoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableKategoriMouseClicked
        int baris = tableKategori.getSelectedRow();
        String category_id = tableKategori.getValueAt(baris, 0).toString();
        String category_name = tableKategori.getValueAt(baris, 1).toString();
        txtIDkat.setText(category_id);
        txtNamaKat.setText(category_name);
    }//GEN-LAST:event_tableKategoriMouseClicked

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
        if (txtIDkat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Kategori belum diisi");
            txtIDkat.requestFocus();
        } else if (txtNamaKat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Kategori belum diisi");
            txtNamaKat.requestFocus();
        } else {
            String sql = "INSERT INTO master_asset_category VALUES (?, ?)";
            try (PreparedStatement preparedStatement = obj.konek.prepareStatement(sql)) {
                preparedStatement.setString(1, txtIDkat.getText());
                preparedStatement.setString(2, txtNamaKat.getText());
                preparedStatement.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil disimpan");
                // Kosongkan field setelah penyimpanan
                txtIDkat.setText("");
                txtNamaKat.setText("");
            }
        }
        tampilDataKategori();
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e.toString());
    }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        try {
        if (txtIDkat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan dihapus");
        } else {
            String idKategori = txtIDkat.getText();
            String sql = "DELETE FROM master_asset_category WHERE category_id = ?";
            
            try (PreparedStatement preparedStatement = obj.konek.prepareStatement(sql)) {
                preparedStatement.setString(1, idKategori);
                int result = preparedStatement.executeUpdate();

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                    // Kosongkan field setelah penghapusan
                    txtIDkat.setText("");
                    txtNamaKat.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal menghapus data");
                }
            }
            tampilDataKategori();
        }
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e.toString());
    }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try {
        if (txtIDkat.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Pilih data yang akan diubah");
        } else {
            String idKategori = txtIDkat.getText();
            String namaKategori = txtNamaKat.getText();

            String sql = "UPDATE master_asset_category SET category_name = ? WHERE category_id = ?";
            
            try (PreparedStatement preparedStatement = obj.konek.prepareStatement(sql)) {
                preparedStatement.setString(1, namaKategori);
                preparedStatement.setString(2, idKategori);
                int result = preparedStatement.executeUpdate();

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diubah");
                    // Kosongkan field setelah pengeditan
                    txtIDkat.setText("");
                    txtNamaKat.setText("");
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengubah data");
                }
            }
            tampilDataKategori();
        }
    } catch (SQLException | HeadlessException e) {
        JOptionPane.showMessageDialog(this, e.toString());
    }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        String path = ".\\src\\report\\reportKategori.jasper";
        try {
        // Mengatur koneksi database (gantilah parameter koneksi dengan yang sesuai)
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventaris_aset", "root", "");

        // Mengisi laporan dengan data dari database
        JasperPrint jprint = JasperFillManager.fillReport(path, null, conn);

        // Menampilkan laporan menggunakan JasperViewer
        JasperViewer jviewer = new JasperViewer(jprint, false);
        jviewer.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        jviewer.setVisible(true);

        // Menutup koneksi database setelah selesai
        conn.close();
     } catch (JRException | SQLException e) {
        // Menangkap dan menampilkan exception
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
     }
    }//GEN-LAST:event_btnCetakActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kategoriAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kategoriAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kategoriAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kategoriAsset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kategoriAsset().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableKategori;
    private javax.swing.JTextField txtIDkat;
    private javax.swing.JTextField txtNamaKat;
    // End of variables declaration//GEN-END:variables
}
